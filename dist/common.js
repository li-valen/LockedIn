if("undefined"!=typeof window){const t=document.createElement;document.createElement=function(e){const a=t.call(this,e);if("script"===e.toLowerCase()){const t=a.setAttribute;a.setAttribute=function(e,a){if("src"!==e||!a.includes("apis.google.com")&&!a.includes("recaptcha"))return t.call(this,e,a);console.warn("External script loading blocked:",a)}}return a}}(self.webpackChunklockedin_extension=self.webpackChunklockedin_extension||[]).push([[76],{51:(t,e,a)=>{a.d(e,{HF:()=>r.HF,db:()=>o,j2:()=>n});var s=a(223),r=a(9511),i=a(2405);const d=(0,s.Wp)({apiKey:"AIzaSyC-0hXTfU-L9b87YWcx2gTRT_G5IHKaL8w",authDomain:"lockedin-544ce.firebaseapp.com",projectId:"lockedin-544ce",storageBucket:"lockedin-544ce.firebasestorage.app",messagingSenderId:"880132322779",appId:"1:880132322779:web:bde3d03103c5ac0f08a3fe",measurementId:"G-PMML07PNJ2"}),n=(0,r.xI)(d),o=(0,i.aU)(d)},6164:(t,e,a)=>{a.d(e,{DL:()=>i,DailyStatsService:()=>d,Ky:()=>o,x5:()=>n});var s=a(2405),r=a(51);class i{static async createUser(t){const e=(0,s.H9)(r.db,"users",t.uid);await(0,s.BN)(e,{...t,createdAt:(0,s.O5)(),lastActiveAt:(0,s.O5)(),totalWorkTime:0,dailyGoal:3,streak:0,achievements:[]})}static async getUser(t){const e=(0,s.H9)(r.db,"users",t),a=await(0,s.x7)(e);if(a.exists()){const t=a.data();return{...t,createdAt:t.createdAt?.toDate()||new Date,lastActiveAt:t.lastActiveAt?.toDate()||new Date}}return null}static async updateUser(t,e){const a=(0,s.H9)(r.db,"users",t);await(0,s.mZ)(a,{...e,lastActiveAt:(0,s.O5)()}),void 0!==e.dailyGoal&&await d.updateStreak(t)}static async updateUserActivity(t){const e=(0,s.H9)(r.db,"users",t);await(0,s.mZ)(e,{lastActiveAt:(0,s.O5)()})}static async getUserWithStreak(t){const e=(0,s.H9)(r.db,"users",t),a=await(0,s.x7)(e);if(a.exists()){const t=a.data();return{streak:t.streak||0,dailyGoal:t.dailyGoal||3}}return null}}class d{static async updateDailyStats(t,e,a){const i=(new Date).toISOString().split("T")[0],d=`${t}_${i}`,n=(0,s.H9)(r.db,"dailyStats",d),o=await(0,s.x7)(n),c=await(0,s.x7)((0,s.H9)(r.db,"users",t)),u=e>=60*(c.data()?.dailyGoal||3)*60*1e3;if(o.exists()){const t=o.data(),r=[...new Set([...t.websites,a])];await(0,s.mZ)(n,{totalWorkTime:e,sessions:t.sessions+1,websites:r,goalAchieved:u})}else await(0,s.BN)(n,{userId:t,date:i,totalWorkTime:e,sessions:1,websites:[a],goalAchieved:u});await this.updateStreak(t)}static async updateStreak(t){const e=new Date,a=`${t}_${e.toISOString().split("T")[0]}`,i=(0,s.H9)(r.db,"dailyStats",a),d=await(0,s.x7)(i);let n=0;if(d.exists())if(d.data().goalAchieved){let a=new Date(e),i=0;for(;;){const e=`${t}_${a.toISOString().split("T")[0]}`,d=(0,s.H9)(r.db,"dailyStats",e),n=await(0,s.x7)(d);if(!n.exists())break;if(!n.data().goalAchieved)break;i++,a.setDate(a.getDate()-1)}n=i}else n=0;else n=0;const o=(0,s.H9)(r.db,"users",t);await(0,s.mZ)(o,{streak:n,lastActiveAt:(0,s.O5)()})}static async getTodayStats(t){const e=`${t}_${(new Date).toISOString().split("T")[0]}`,a=(0,s.H9)(r.db,"dailyStats",e),i=await(0,s.x7)(a);return i.exists()?{id:i.id,...i.data()}:null}static async resetStreakForInactiveUsers(){const t=(new Date).toISOString().split("T")[0],e=(0,s.P)((0,s.rJ)(r.db,"users")),a=await(0,s.GG)(e);for(const e of a.docs){const a=e.id,i=`${a}_${t}`,d=(0,s.H9)(r.db,"dailyStats",i),n=await(0,s.x7)(d);if(n.exists()){if(!n.data().goalAchieved){const t=(0,s.H9)(r.db,"users",a);await(0,s.mZ)(t,{streak:0,lastActiveAt:(0,s.O5)()})}}else{const t=(0,s.H9)(r.db,"users",a);await(0,s.mZ)(t,{streak:0,lastActiveAt:(0,s.O5)()})}}}static async getUserWeeklyStats(t){const e=new Date;e.setDate(e.getDate()-7);const a=e.toISOString().split("T")[0],i=(0,s.P)((0,s.rJ)(r.db,"dailyStats"),(0,s._M)("userId","==",t),(0,s._M)("date",">=",a),(0,s.My)("date","desc"));return(await(0,s.GG)(i)).docs.map(t=>({id:t.id,...t.data()}))}}class n{static async getLeaderboard(t="daily"){const e=(new Date).toISOString().split("T")[0];if("daily"===t){const t=(0,s.P)((0,s.rJ)(r.db,"dailyStats"),(0,s._M)("date","==",e),(0,s.My)("totalWorkTime","desc"),(0,s.AB)(10)),a=await(0,s.GG)(t),i=[];for(const t of a.docs){const e=t.data(),a=await(0,s.x7)((0,s.H9)(r.db,"users",e.userId));if(a.exists()){const t=a.data();e.userId.startsWith("test-user-")||i.push({userId:e.userId,userName:t.displayName,userEmail:t.email,totalWorkTime:e.totalWorkTime,rank:i.length+1,streak:t.streak||0})}}return i}{const t=new Date;t.setDate(t.getDate()-7);const e=t.toISOString().split("T")[0],a=(0,s.P)((0,s.rJ)(r.db,"dailyStats"),(0,s._M)("date",">=",e),(0,s.My)("date","desc")),i=await(0,s.GG)(a),d={};for(const t of i.docs){const e=t.data();if(!e.userId.startsWith("test-user-")){if(!d[e.userId]){const t=await(0,s.x7)((0,s.H9)(r.db,"users",e.userId));if(t.exists()){const a=t.data();d[e.userId]={totalTime:0,userName:a.displayName,userEmail:a.email,streak:a.streak||0}}}d[e.userId]&&(d[e.userId].totalTime+=e.totalWorkTime)}}const n=Object.entries(d).map(([t,e])=>({userId:t,userName:e.userName,userEmail:e.userEmail,totalWorkTime:e.totalTime,rank:0,streak:e.streak})).sort((t,e)=>e.totalWorkTime-t.totalWorkTime).slice(0,10);return n.forEach((t,e)=>{t.rank=e+1}),n}}static subscribeToLeaderboard(t,e,a){const i=(new Date).toISOString().split("T")[0];if("daily"===t){const t=(0,s.P)((0,s.rJ)(r.db,"dailyStats"),(0,s._M)("date","==",i),(0,s.My)("totalWorkTime","desc"),(0,s.AB)(50));return(0,s.aQ)(t,async t=>{const i=[];let d=[];if(a)try{d=(await o.getFriends(a)).map(t=>t.userId===a?t.friendId:t.userId),d.push(a)}catch(t){console.error("Error getting friends for leaderboard:",t)}for(const e of t.docs){const t=e.data(),a=await(0,s.x7)((0,s.H9)(r.db,"users",t.userId));if(a.exists()){const e=a.data();t.userId.startsWith("test-user-")||0!==d.length&&!d.includes(t.userId)||i.push({userId:t.userId,userName:e.displayName,userEmail:e.email,totalWorkTime:t.totalWorkTime,rank:i.length+1,streak:e.streak||0})}}i.sort((t,e)=>e.totalWorkTime-t.totalWorkTime),i.forEach((t,e)=>{t.rank=e+1}),e(i.slice(0,10))})}{const t=new Date;t.setDate(t.getDate()-7);const i=t.toISOString().split("T")[0],d=(0,s.P)((0,s.rJ)(r.db,"dailyStats"),(0,s._M)("date",">=",i),(0,s.My)("date","desc"));return(0,s.aQ)(d,async t=>{const i={};let d=[];if(a)try{d=(await o.getFriends(a)).map(t=>t.userId===a?t.friendId:t.userId),d.push(a)}catch(t){console.error("Error getting friends for weekly leaderboard:",t)}for(const e of t.docs){const t=e.data();if(!t.userId.startsWith("test-user-")&&(0===d.length||d.includes(t.userId))){if(!i[t.userId]){const e=await(0,s.x7)((0,s.H9)(r.db,"users",t.userId));if(e.exists()){const a=e.data();i[t.userId]={totalTime:0,userName:a.displayName,userEmail:a.email,streak:a.streak||0}}}i[t.userId]&&(i[t.userId].totalTime+=t.totalWorkTime)}}const n=Object.entries(i).map(([t,e])=>({userId:t,userName:e.userName,userEmail:e.userEmail,totalWorkTime:e.totalTime,rank:0,streak:e.streak})).sort((t,e)=>e.totalWorkTime-t.totalWorkTime).slice(0,10);n.forEach((t,e)=>{t.rank=e+1}),e(n)})}}}class o{static async sendFriendRequest(t,e){if(r.j2.currentUser?.email===e)throw new Error("You cannot add yourself as a friend");const a=(0,s.P)((0,s.rJ)(r.db,"users"),(0,s._M)("email","==",e),(0,s.AB)(1)),i=await(0,s.GG)(a);if(i.empty)throw new Error("User not found");const d=i.docs[0],n=d.id,o=(0,s.P)((0,s.rJ)(r.db,"friends"),(0,s._M)("userId","==",t),(0,s._M)("friendId","==",n)),c=await(0,s.GG)(o);if(!c.empty){const t=c.docs[0].data();if("pending"===t.status)throw new Error("Friend request already sent");if("accepted"===t.status)throw new Error("This user is already your friend")}const u=(0,s.P)((0,s.rJ)(r.db,"friends"),(0,s._M)("userId","==",n),(0,s._M)("friendId","==",t)),l=await(0,s.GG)(u);if(!l.empty){const t=l.docs[0].data();if("pending"===t.status)throw new Error("This user has already sent you a friend request");if("accepted"===t.status)throw new Error("This user is already your friend")}await(0,s.gS)((0,s.rJ)(r.db,"friends"),{userId:t,friendId:n,friendEmail:e,friendName:d.data().displayName,status:"pending",createdAt:(0,s.O5)()})}static async getFriends(t){const e=(0,s.P)((0,s.rJ)(r.db,"friends"),(0,s.or)((0,s.Uo)((0,s._M)("userId","==",t),(0,s._M)("status","==","accepted")),(0,s.Uo)((0,s._M)("friendId","==",t),(0,s._M)("status","==","accepted")))),a=await(0,s.GG)(e),i=[],d=new Set;for(const e of a.docs){const a=e.data(),n=a.userId===t?a.friendId:a.userId;if(!d.has(n)){d.add(n);const t=await(0,s.x7)((0,s.H9)(r.db,"users",n));if(t.exists()){const s=t.data();i.push({id:e.id,userId:a.userId,friendId:a.friendId,friendEmail:a.friendEmail||s.email,friendName:a.friendName||s.displayName,status:a.status,createdAt:a.createdAt?.toDate?.()??new Date})}}}return i}static async getPendingRequests(t){const e=(0,s.P)((0,s.rJ)(r.db,"friends"),(0,s._M)("friendId","==",t),(0,s._M)("status","==","pending"));return(await(0,s.GG)(e)).docs.map(t=>({id:t.id,...t.data(),createdAt:t.data().createdAt?.toDate?.()??new Date}))}static async acceptFriendRequest(t){const e=(0,s.H9)(r.db,"friends",t),a=await(0,s.x7)(e);if(a.exists()){const t=a.data();if(await(0,s.mZ)(e,{status:"accepted"}),(await(0,s.GG)((0,s.P)((0,s.rJ)(r.db,"friends"),(0,s._M)("userId","==",t.friendId),(0,s._M)("friendId","==",t.userId)))).empty){const e=(await(0,s.x7)((0,s.H9)(r.db,"users",t.friendId))).data();await(0,s.gS)((0,s.rJ)(r.db,"friends"),{userId:t.friendId,friendId:t.userId,friendEmail:e?.email,friendName:e?.displayName,status:"accepted",createdAt:(0,s.O5)()})}}}static async removeFriend(t){const e=(0,s.H9)(r.db,"friends",t),a=await(0,s.x7)(e);if(a.exists()){const t=a.data();await(0,s.kd)(e);const i=(0,s.P)((0,s.rJ)(r.db,"friends"),(0,s._M)("userId","==",t.friendId),(0,s._M)("friendId","==",t.userId)),d=await(0,s.GG)(i);if(!d.empty){const t=d.docs[0];await(0,s.kd)(t.ref)}}}static async cleanupDuplicateFriends(t){const e=(0,s.P)((0,s.rJ)(r.db,"friends"),(0,s.or)((0,s._M)("userId","==",t),(0,s._M)("friendId","==",t))),a=await(0,s.GG)(e),i=new Map,d=[];for(const e of a.docs){const a=e.data(),s=a.userId===t?a.friendId:a.userId,r=t<s?`${t}_${s}`:`${s}_${t}`;if(i.has(r)){const t=i.get(r);(a.createdAt?.toDate?.()||new Date(0))>(t.createdAt?.toDate?.()||new Date(0))?(d.push(t.id),i.set(r,{...a,id:e.id})):d.push(e.id)}else i.set(r,{...a,id:e.id})}for(const t of d)await(0,s.kd)((0,s.H9)(r.db,"friends",t))}}}}]);